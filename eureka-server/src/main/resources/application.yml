#server:
#  port: 8761

#eureka:
#  instance:
#    # eureka服务端的实例名称
#    hostname: localhost
#  client:
#    #    通过eureka.client.registerWithEureka：false和fetchRegistry：false来表明自己是一个eureka server.
#    registerWithEureka: false
#    fetchRegistry: false
#    serviceUrl:
#      #设置与Eureka Server交互的地址查询服务和注册服务都需要依赖这个地址
#      defaultZone: http://${eureka.instance.hostname}:${server.port}/eureka/
#
spring:
  application:
    name: eurka-server   # 声明该服务名



# 高可用 配置 互相注册  通过选择peer1还是peer2来启动
---
spring:
  profiles: peer1
server:
  port: 8761
eureka:
  instance:
    hostname: peer1
#    prefer-ip-address: true #以IP地址注册到服务中心，相互注册使用IP地址
    #ip-address: 192.168.1.1 #强制指定IP地址，默认会获取本机的IP地址
  client:
    serviceUrl:
      # 指定其他所有ip地址下的注册中心 ，在client则要指定所有注册中心
#      defaultZone: http://192.168.1.2:8100/eureka/,http://192.168.1.3:8100/eureka/
      defaultZone: http://peer2:8769/eureka/

---
spring:
  profiles: peer2
server:
  port: 8769
eureka:
  instance:
    hostname: peer2
#    prefer-ip-address: true #以IP地址注册到服务中心，相互注册使用IP地址
    #ip-address: 192.168.1.1 #强制指定IP地址，默认会获取本机的IP地址
  client:
    serviceUrl:
      defaultZone: http://peer1:8761/eureka/